services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bae-recipe-api
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - ALLOWED_ORIGINS=http://localhost:5173
    volumes:
      - .:/app
    depends_on:
      - db
    command: sh -c "pip install -r requirements.dev.txt && alembic upgrade head && uvicorn main:app --host 0.0.0.0 --port 8000 --reload"

  db:
    image: postgres:15
    container_name: bae-recipe-db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=bae_recipe
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: bae-recipe-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: bae-recipe-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@baerecipe.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_CONFIG_SERVER_MODE=False
    ports:
      - "5050:80"
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin/servers.json:/pgadmin4/servers.json
      
  minio:
    image: quay.io/minio/minio
    container_name: minio
    ports:
      - "9000:9000"     # S3 API
      - "9001:9001"     # Console
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"

  minio-init:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      sh -c "
        sleep 5;
        mc alias set myminio http://minio:9000 minioadmin minioadmin &&
        mc mb myminio/bae-recipe-bucket &&
        echo 'âœ… MinIO bucket created';
      "
    restart: "no"

volumes:
  postgres_data:
  pgadmin_data:
  redis_data:
  minio_data:

 